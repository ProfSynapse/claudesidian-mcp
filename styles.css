/* Accordion Styles */
.mcp-accordion {
    margin-bottom: 1rem;
    border: 1px solid var(--background-modifier-border);
    border-radius: 4px;
    background-color: var(--background-primary);
}

.mcp-accordion-container {
    display: flex;
    flex-direction: column;
}

.mcp-accordion-header {
    order: 1; /* Header first */
    border-bottom: 1px solid var(--background-modifier-border);
}

.mcp-accordion-content {
    order: 2; /* Content second */
}

/* Handle border when accordion is open */
.mcp-accordion-content.is-open {
    border-top: 1px solid var(--background-modifier-border);
}

.mcp-accordion-content.is-open ~ .mcp-accordion-header {
    border-bottom: none;
}

.mcp-accordion-toggle {
    width: 100%;
    padding: 1rem;
    background: none;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    color: var(--text-normal);
}

.mcp-accordion-toggle:hover {
    background-color: var(--background-modifier-hover);
}

.mcp-accordion-title {
    font-size: 1.1em;
    font-weight: 500;
    flex: 1;
    text-align: left;
}

.mcp-accordion-icon {
    width: 24px;
    height: 24px;
    position: relative;
}

.mcp-accordion-icon::before,
.mcp-accordion-icon::after {
    content: '';
    position: absolute;
    background-color: var(--text-normal);
    transition: transform 0.25s ease-out;
}

.mcp-accordion-icon::before {
    top: 11px;
    left: 6px;
    width: 12px;
    height: 2px;
}

.mcp-accordion-icon::after {
    top: 6px;
    left: 11px;
    width: 2px;
    height: 12px;
}

.mcp-accordion-icon.is-open::after {
    transform: rotate(90deg);
}

.mcp-accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
}

.mcp-accordion-content.is-open {
    max-height: 2000px; /* Large enough to contain content */
}

.mcp-accordion-content > div {
    padding: 1rem;
}

/* Mobile optimizations */
@media (max-width: 768px) {
    .mcp-accordion-toggle {
        padding: 0.8rem;
    }

    .mcp-accordion-title {
        font-size: 1em;
    }
}

/* Setup Prompt Styles */
.mcp-section pre {
    background-color: var(--background-secondary);
    padding: 12px;
    border-radius: 4px;
    margin: 10px 0;
    overflow-x: auto;
    max-height: 400px;
    overflow-y: auto;
}

.mcp-section code {
    font-family: var(--font-monospace);
    font-size: 0.9em;
}

.mcp-section button.mod-cta {
    margin-top: 8px;
    margin-bottom: 16px;
    padding: 6px 12px;
    background-color: var(--interactive-accent);
    color: var(--text-on-accent);
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.mcp-section button.mod-cta:hover {
    background-color: var(--interactive-accent-hover);
}

/* Settings Styles */
.claudesidian-mcp-settings {
    padding: 12px;
}

.claudesidian-mcp-settings textarea {
    min-height: 100px;
    width: 100%;
    font-family: var(--font-monospace);
}

/* Modal Styles */
.folder-container {
    max-height: 400px;
    overflow-y: auto;
    margin: 1em 0;
    border: 1px solid var(--background-modifier-border);
    border-radius: 4px;
    padding: 8px;
}

.folder-item {
    display: flex;
    align-items: center;
    padding: 4px 0;
    cursor: pointer;
}

.folder-checkbox {
    margin-right: 8px;
}

.folder-name {
    flex: 1;
}

.modal-button-container {
    display: flex;
    justify-content: flex-end;
    gap: 8px;
    margin-top: 1em;
}

.folder-item:hover {
    background-color: var(--background-modifier-hover);
}

.folder-indent {
    padding-left: 20px;
}

.claudesidian-mcp-folder-item {
    display: flex;
    align-items: center;
    padding: 4px;
    cursor: pointer;
}

.claudesidian-mcp-checkbox {
    margin-right: 8px;
}

.claudesidian-mcp-folder-name {
    flex: 1;
}

/* Memory Manager Settings */
.memory-settings-container h3 {
    margin-top: 24px;
    border-bottom: 1px solid var(--background-modifier-border);
    padding-bottom: 8px;
}

.memory-settings-tabs {
    display: flex;
    border-bottom: 1px solid var(--background-modifier-border);
    margin-bottom: 16px;
}

.memory-tab {
    padding: 8px 16px;
    cursor: pointer;
    border-radius: 4px 4px 0 0;
    margin-right: 4px;
}

.memory-tab.active {
    background-color: var(--background-secondary);
    border: 1px solid var(--background-modifier-border);
    border-bottom: none;
}

.memory-tab-pane {
    display: none;
}

.memory-tab-pane.active {
    display: block;
}

.memory-usage-stats {
    background-color: var(--background-secondary);
    border-radius: 4px;
    padding: 16px;
    margin: 16px 0;
}

.memory-usage-progress {
    width: 100%;
    height: 8px;
    background-color: var(--background-modifier-border);
    border-radius: 4px;
    margin: 8px 0 16px 0;
}

.memory-usage-bar {
    height: 100%;
    background-color: var(--interactive-accent);
    border-radius: 4px;
    transition: width 0.3s ease;
}

.memory-actions {
    display: flex;
    gap: 8px;
    margin-top: 16px;
    align-items: center;
}

.memory-settings-desc {
    margin-bottom: 8px;
    opacity: 0.8;
}

.memory-advanced-toggle {
    text-align: right;
    margin-top: 16px;
    cursor: pointer;
    color: var(--text-accent);
}

.memory-advanced-settings {
    display: none;
}

.memory-advanced-settings.show {
    display: block;
}

/* Progress indicator for indexing */
.memory-indexing-progress {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 8px;
}

.memory-progress-spinner {
    display: inline-block;
    width: 16px;
    height: 16px;
    border: 2px solid rgba(var(--interactive-accent-rgb), 0.3);
    border-radius: 50%;
    border-top-color: var(--interactive-accent);
    animation: memory-spin 1s linear infinite;
}

@keyframes memory-spin {
    to {
        transform: rotate(360deg);
    }
}

/* MCP Connection Status */
.mcp-connector-status {
    display: flex;
    align-items: center;
    gap: 5px;
    white-space: nowrap;
    font-size: var(--font-ui-smaller);
}

.mcp-connector-status .status-indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
}

.mcp-connector-status .status-indicator.connected {
    background-color: var(--interactive-success);
}

.mcp-connector-status .status-indicator.disconnected {
    background-color: var(--text-error);
}

.mcp-connector-status .status-indicator.starting {
    background-color: var(--text-warning);
}